@model FinalProject.Models.Media

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<body dir="rtl">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.MediaType, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MediaType, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.MediaType, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HebrewTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HebrewTitle, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.HebrewTitle, htmlAttributes: new {@class = "control-label col-md-2"})
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EnglishTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EnglishTitle, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.EnglishTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Summery, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Summery, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Summery, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="form-group">
                
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.ReleaseDate, new {@Value = Model.ReleaseDate.ToString("d"), @type = "date"})
                </div>
                @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new {@class = "control-label col-md-2"})

            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Directors, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Directors, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Directors, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Producers, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Producers, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Producers, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Actors, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Actors, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="file" name="Image" id="Image" accept="Image/png" />
                </div>
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="עדכון" class="btn site-btn" />
                </div>
            </div>
        </div>
    }
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
