@using FinalProject.Models
@model FinalProject.Models.MediaCommentViewModel

@{
    ViewBag.Title = "MovieDetails";
}

<body dir="rtl">
<div class="site-content">
    <div class="row media-details-row">
        <div class="col-md-6 image-column">
            <canvas id="mediaPic" width="400" height="494"></canvas>
        </div>
        <div class="col-md-6 media-content">
            <h1>@Html.DisplayFor(item => item.Media.HebrewTitle)</h1>
            <h4>@Html.DisplayFor(item => item.Media.EnglishTitle)</h4>
            <div id="imdbRating" dir="ltr"></div>
            @*<span dir="ltr" class="imdbRatingPlugin" data-user="ur62979138" data-style="p3">
                <a id="imdbLink">
                    <img src="http://g-ecx.images-amazon.com/images/G/01/imdb/plugins/rating/images/imdb_37x18.png" alt="@Html.DisplayFor(item => item.Media.HebrewTitle) on IMDb" />
                </a>
            </span>*@
            <div class="row">
                <b> @Html.LabelFor(item => item.Media.Length):</b>
                @Html.DisplayFor(item => item.Media.Length) דקות
            </div>
            <div class="row">
                <b> @Html.LabelFor(item => item.Media.Directors):</b>
                @Html.DisplayFor(item => item.Media.Directors)
            </div>
            <div class="row">
                <b> @Html.LabelFor(item => item.Media.Producers):</b>
                @Html.DisplayFor(item => item.Media.Producers)
            </div>
            <div class="row">
                <b> @Html.LabelFor(item => item.Media.Producers):</b>
                @Html.DisplayFor(item => item.Media.Producers)
            </div>
            <div class="row">
                <b> @Html.LabelFor(item => item.Media.Actors):</b>
                @Html.DisplayFor(item => item.Media.Actors)
            </div>
            <div class="row">
                <b> @Html.LabelFor(item => item.Media.ReleaseDate):</b>
                @Html.DisplayFor(item => item.Media.ReleaseDate.Year)
            </div>
            <div class="row">
                <b> @Html.LabelFor(item => item.Media.Category):</b>
                @Html.DisplayFor(item => item.Media.Category)
            </div>
            <div class="row">
                <b> @Html.LabelFor(item => item.Media.Summery):</b>
                @Html.DisplayFor(item => item.Media.Summery)
            </div>
        </div>

    </div>
    <div class="row comments-content">
        <div class="col-md-6">
            <h3>הוסף תגובה:</h3>
            @using (Html.BeginForm("AddComment", "Media", FormMethod.Post, new {comment = Model.Comment}))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(item => item.Comment.MediaId)
                <div class="form-horizontal" style="padding-right: 15px;">
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Comment.Title, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor(model => model.Comment.Title)
                            </div>
                            <div class="col-md-2">
                                @Html.DisplayNameFor(model => Model.Comment.Title)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Comment.Content, new {@cols = 37})
                                @Html.ValidationMessageFor(model => model.Comment.Content)
                            </div>
                            <div class="col-md-2">
                                @Html.DisplayNameFor(model => Model.Comment.Content)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-10">
                        <input type="submit" value="הוסף תגובה" id="btnComment" class="btn site-btn" name="@Session["LoggedinUserName"]">
                        <label class="label label-primary" id="CommentError">שים לב! רק משתמשים מחוברים יכולים להגיב</label>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-6">
            <h3>תגובות:</h3>
            @foreach (var comment in Model.Media.Comments)
            {
                @Html.HiddenFor(item => comment.Id)
                <div class="comment-design">
                    <div class="row">
                        <div class="col-md-2">
                            @if (Session["LoggedinUserType"] != null && Session["LoggedinUserType"].ToString() == "Manager")
                            {
                                <a href="@Url.Action("DeleteComment", "Media", new {id = comment.Id})">
                                    <span class="btn glyphicon glyphicon-trash"></span>
                                </a>
                            }
                        </div>
                        <div class="col-md-10 comment-time-user">@Html.DisplayFor(item => comment.Date) - @Session["LoggedinUserName"] </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <b>@Html.DisplayFor(item => comment.Title)</b>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 comment-content-size">
                            @Html.DisplayFor(item => comment.Content)
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

    @section Scripts
{
        @Scripts.Render("~/bundles/jqueryval")

        <script language="javascript" type="text/javascript">

    (function (d, s, id) {
        var js, stags = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) {
            return;
        }
        js = d.createElement(s);
        js.id = id;
        js.src = "http://g-ec2.images-amazon.com/images/G/01/imdb/plugins/rating/js/rating.min.js";
        stags.parentNode.insertBefore(js, stags);
    })
    (document, 'script', 'imdb-rating-api');

    var imdbId;
    $(document).ready(function () {
        $.ajax({
            dataType: "json",
            url: "http://www.omdbapi.com/?t=@Model.Media.EnglishTitle",
                    success: function (result) {
                        $('#imdbRating')[0].innerHTML = '<span class="imdbRatingPlugin" data-user="ur62979138" data-title="' + result.imdbID + '" data-style="p3">' +
                            '<a href="http://www.imdb.com/title/' + result.imdbID + '/?ref_=plg_rt_1">' +
                            '<img src="http://g-ecx.images-amazon.com/images/G/01/imdb/plugins/rating/images/imdb_37x18.png"/>' +
                            '</a>' +
                            '</span>';
                    }
                });
            });

            if (document.getElementById("btnComment").name === "") {
                document.getElementById("btnComment").disabled = true;
            }

            var canvas = document.getElementById('mediaPic');
            var context = canvas.getContext('2d');
            var imageObj = new Image();

            imageObj.onload = function () {
                context.drawImage(imageObj, 0, 0, 400, 494);
            };
            imageObj.src = 'data:image/png;base64,@Html.DisplayFor(item => item.Media.Image)';
        </script>
    }
</body>



