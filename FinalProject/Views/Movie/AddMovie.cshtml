@model FinalProject.ViewModels.MovieViewModel

@{
    ViewBag.Title = "AddMovie";
}

<body dir="rtl">
    <br /><br />
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "javascript:return validateImageType()" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="row">
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.HebrewTitle)
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.HebrewTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HebrewTitle)
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.EnglishTitle)
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EnglishTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EnglishTitle)
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.ReleaseDate)
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReleaseDate)
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Category)
                    <div class="col-md-8">
                        @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.Category)
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Producers)
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Producers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Producers)
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Directors)
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Directors, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Directors)
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Actors)
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Actors, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Actors)
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Length)
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control", min = 0, max = 600 } })
                        @Html.ValidationMessageFor(model => model.Length)
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Summery)
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Summery, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Summery)
                    </div>
                </div>

                <div class="form-group">
                    @Html.DisplayNameFor(model => model.Image)
                    <div class="col-md-8">
                        <input type="file" name="Image" id="Image" accept="Image/png" />
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-8">
                    <input type="submit" value="הוסף" class="btn btn-info" />
                </div>
            </div>
        </div>
    }
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script language="javascript" type="text/javascript">
        function validateImageType() {
            $file = $("#Image");
            var $filePath = $.trim($file.val());

            var $ext = $filePath.split(".").pop().toLowerCase();
            if ($ext != "png" && $filePath != "") {
                alert("Only png image files are accepted, please browse a image file");
                return false;
            }

            return true;
        }
        </script>

    }
</body>
</html>
